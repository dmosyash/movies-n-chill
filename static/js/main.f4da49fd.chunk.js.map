{"version":3,"sources":["services/apiService.js","components/search-box/SearchBox.js","components/Header.js","components/MovieCell.js","containers/Home.js","components/movie-details/MovieDetailView.js","components/movie-details/MovieCastView.js","components/movie-details/SimilarMovies.js","containers/MovieDetails.js","components/cast-details/CastDetailView.js","components/cast-details/MoviesOfCast.js","containers/CastDetails.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","imageBaseUrl","getAPIcall","apiUrl","params","api_key","Object","keys","forEach","key","searchParams","append","fetch","then","res","json","getPopularMovies","arguments","length","undefined","URL","concat","getSearchResults","getMovieDetails","id","getMovieCast","getSimilarMovies","SearchBox","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","goToMovie","setState","results","renderResults","state","slice","map","result","react_default","a","createElement","onClick","width","height","src","poster_path","alt","title","style","marginLeft","handleSearchChange","event","target","value","searchText","timer","clearTimeout","setTimeout","query","_ref","resultBox","className","type","onChange","placeholder","Component","headerStyle","backgroundColor","minHeight","fontSize","display","color","padding","searchBoxContainer","position","right","top","zIndex","Header","goHome","cursor","components_search_box_SearchBox","textAlign","MovieCell","movie","Col_default","xs","md","Home","callApi","loading","response","moviesData","currentPage","page","totalPages","total_pages","renderMovies","components_MovieCell","history","push","goPrevious","goNext","nextProps","match","pageNo","ReactDom","findDOMNode","scrollIntoView","paddingTop","Grid_default","Row_default","ButtonToolbar_default","Button_default","bsStyle","bsSize","float","margin","renderMultipleAnswers","data","item","i","name","convertInMillions","amount","parseInt","toFixed","MovieDetailView","movieData","tagline","runtime","status","release_date","genres","vote_average","vote_count","budget","revenue","spoken_languages","overview","MovieCastView","cast","Table_default","striped","bordered","condensed","hover","v","profile_path","character","renderCast","SimilarMovies","list","overflow","MovieDetails","callApis","movieCast","similarMovies","goToCast","window","scrollTo","_this$state","Fragment","movie_details_MovieDetailView","movie_details_SimilarMovies","movie_details_MovieCastView","CastDetailView","also_known_as","known_for_department","birthday","place_of_birth","deathday","biography","MoviesOfCast","movieList","CastDetails","castData","_this2","getCastDetails","getCastMovies","cast_details_CastDetailView","cast_details_MoviesOfCast","footerStyle","ulStyle","liStyle","listStyleType","Footer","href","data-icon","data-size","aria-label","App","components_Header","Switch","Route","exact","path","component","components_Footer","withRouter","Boolean","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4da49fd.chunk.js","sourcesContent":["// API_KEY from themoviedb site.\nconst API_KEY = \"2ad3bd185c74b055ce8740e15c06d03c\";\n\n//Base url of APIs of themoviedb.\nconst baseUrl = \"https://api.themoviedb.org/3/\";\n\n//Base url of images of themoviedb.\nexport const imageBaseUrl = \"http://image.tmdb.org/t/p/\";\n\n//function to call any 'get' API \nconst getAPIcall = (apiUrl, params) => {\n    params.api_key = API_KEY;\n    Object.keys(params).forEach(key => apiUrl.searchParams.append(key, params[key]))\n    return fetch(apiUrl)\n        .then(res => res.json());\n}\n\nexport const getPopularMovies = (params = {}) => {\n    let apiUrl = new URL(`${baseUrl}movie/popular`);\n    return getAPIcall(apiUrl, params);\n}\n\nexport const getSearchResults = (params = {}) => {\n    let apiUrl = new URL(`${baseUrl}search/movie`);\n    return getAPIcall(apiUrl, params);\n}\n\nexport const getMovieDetails = (id, params = {}) => {\n    let apiUrl = new URL(`${baseUrl}movie/${id}`);\n    return getAPIcall(apiUrl, params);\n}\n\nexport const getMovieCast = (id, params = {}) => {\n    let apiUrl = new URL(`${baseUrl}movie/${id}/credits`);\n    return getAPIcall(apiUrl, params);\n}\n\nexport const getCastDetails = (id, params = {}) => {\n    let apiUrl = new URL(`${baseUrl}person/${id}`);\n    return getAPIcall(apiUrl, params);\n}\n\nexport const getCastMovies = (id, params = {}) => {\n    let apiUrl = new URL(`${baseUrl}person/${id}/movie_credits`);\n    return getAPIcall(apiUrl, params);\n}\n\nexport const getSimilarMovies = (id, params = {}) => {\n    let apiUrl = new URL(`${baseUrl}movie/${id}/similar`);\n    return getAPIcall(apiUrl, params);\n}","import React, { Component } from 'react';\nimport './SearchBox.css';\nimport { getSearchResults, imageBaseUrl } from '../../services/apiService';\n\n/**\n * @class SearchBox\n * @description SearchBox is a Component which take text as input to search movies \n * by calling search API.\n * It shows top 7 movies from search.\n * State of this Component will contain search text which is input and \n * results which is response of the search API\n * UL is used to show the movie list \n */\n\nclass SearchBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchText: '',\n            results: []\n        }\n        this.timer = null;\n    }\n\n    goToMovie = id => {\n        this.setState({ results: [] });\n        this.props.goToMovie(id)\n    }\n\n    renderResults = () => {\n        if (!this.state.results || !this.state.results.length) return;\n        let resultsToShow = this.state.results.slice(0, 7);\n        return resultsToShow.map(result => {\n            return (<li onClick={() => this.goToMovie(result.id)} key={result.id}>\n                <img width=\"30\" height=\"45\" src={`${imageBaseUrl}w185${result.poster_path}`} alt={result.title} />\n                <span style={{marginLeft: '15px'}}>{result.title}</span>\n            </li>);\n        });\n    }\n\n    handleSearchChange = (event) => {\n        if (event.target.value.length) {\n            this.setState({ searchText: event.target.value });\n        } else {\n            this.setState({ searchText: event.target.value, results: [] });\n            return;\n        }\n\n\n        //calling API after 200ms, to avoiding unnecessary API calls\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n        this.timer = setTimeout(() => {\n            let params = {\n                query: this.state.searchText\n            }\n            getSearchResults(params)\n                .then(({ results }) => this.setState({ results }));\n        }, 200);\n    }\n\n    render() {\n        const resultBox = (\n                <div className=\"result-section\">\n                    <ul>\n                        {this.renderResults()}\n                    </ul>\n                </div>\n        );\n\n        const box = (\n            <div>\n                <div className=\"search-section\">\n                    <input type=\"search\"\n                        value={this.state.searchText}\n                        onChange={this.handleSearchChange}\n                        placeholder=\"Search...\"\n                    />\n                    <span><i className=\"fa fa-search\"></i></span>\n                </div>\n                {this.state.results.length ? resultBox : null}\n            </div>\n        );\n        return box;\n    }\n}\n\nexport default SearchBox;","import React from 'react';\nimport SearchBox from './search-box/SearchBox';\n\n/**\n * @name Header\n * @description as name suggest it is Header of the whole App\n * It has two parts App's Logo and Search box for movies.\n */\n\nconst headerStyle = {\n    backgroundColor: '#282c34',\n    minHeight: '10vh',\n    fontSize: 'calc(10px + 2vmin)',\n    display: 'flex',\n    color: 'white',\n    padding: '0px 80px'\n};\n\nconst searchBoxContainer = {\n    position: 'absolute',\n    right: '60px',\n    top: '11px',\n    zIndex: '200'\n}\n\nconst Header = props => (\n    <header style={headerStyle}>\n        <div onClick={props.goHome} style={{cursor: 'pointer'}}><h2>Movies-n-Chill</h2></div>\n        <div style={searchBoxContainer}><SearchBox goToMovie={props.goToMovie} /></div>\n    </header>\n);\n\nexport default Header;","import React from 'react';\nimport Col from 'react-bootstrap/lib/Col';\nimport { imageBaseUrl } from '../services/apiService';\n\n/**\n * @constant MovieCell\n * @param {Object} movie this has all details of Movie\n * thumbnail of movie is getting from TMDb server of 185px width \n */\n\nconst style = {\n    height: '380px',\n    textAlign: 'center',\n    cursor: 'pointer'\n}\n\nconst MovieCell = ({ onClick, movie }) => (\n    <Col xs={12} md={3} style={style} onClick={() => onClick(movie.id)}>\n        <img style={{ width: '185px', height: '275px' }}\n            src={`${imageBaseUrl}w185${movie.poster_path}`}\n            alt={movie.title}\n        />\n        <h4>{movie.title}</h4>\n    </Col>\n);\n\nexport default MovieCell;","import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport Grid from 'react-bootstrap/lib/Grid';\nimport Row from 'react-bootstrap/lib/Row';\nimport Button from 'react-bootstrap/lib/Button';\nimport ButtonToolbar from 'react-bootstrap/lib/ButtonToolbar';\nimport { getPopularMovies } from './../services/apiService';\nimport MovieCell from '../components/MovieCell';\n\n/**\n * @class Home\n * @description Home is a Container which get popular movies from API called in componentDidMount \n * and changing state so movies will get render.\n * State of this Container is Movie List\n * Grid is used to show the movie list.\n * It has pagination too at bottom of the container.\n */\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            moviesData: [],\n            currentPage: 1,\n            totalPages: 1\n        };\n    }\n\n    componentDidMount() {\n        this.callApi();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.match.params.pageNo !== nextProps.match.params.pageNo) {\n            this.callApi({ page: nextProps.match.params.pageNo });\n            ReactDom.findDOMNode(this).scrollIntoView();\n        }\n    }\n\n    callApi = (params = {}) => {\n        this.setState({ loading: true });\n        getPopularMovies(params)\n            .then(response => {\n                this.setState({\n                    loading: false,\n                    moviesData: response.results,\n                    currentPage: response.page,\n                    totalPages: response.total_pages\n                });\n            });\n    }\n\n    renderMovies = () => {\n        return this.state.moviesData.map(movie => {\n            return <MovieCell key={movie.id} movie={movie} onClick={this.goToMovie}/>\n        })\n    }\n\n    goToMovie = id => this.props.history.push(`/movie/${id}`);\n\n    goPrevious = () => this.props.history.push(`/page/${this.state.currentPage - 1}`);\n\n    goNext = () => this.props.history.push(`/page/${this.state.currentPage + 1}`);\n\n    render() {\n        const styleContainer = {\n            paddingTop: '50px',\n        }\n\n        const previousBtn = {\n            float: 'left',\n            margin: '10px 40px'\n        }\n\n        const nextBtn = {\n            float: 'right',\n            margin: '10px 40px'\n        }\n\n        const container = (<div style={styleContainer}>\n            {this.state.loading ? <h2>Loading...</h2> : null}\n            <Grid>\n                <Row>\n                    {this.renderMovies()}\n                </Row>\n            </Grid>\n            <ButtonToolbar>\n                {this.state.currentPage > 1 ?\n                    <Button bsStyle=\"success\" bsSize=\"large\" style={previousBtn} onClick={this.goPrevious}> {`<< Previous Page`}</Button>\n                    : null}\n                {this.state.currentPage < this.state.totalPages ?\n                    <Button bsStyle=\"success\" bsSize=\"large\" style={nextBtn} onClick={this.goNext}>{`Next Page >>`}</Button>\n                    : null}\n            </ButtonToolbar>\n        </div>);\n        \n        return container;\n    }\n}\n\nexport default Home;","import React from 'react';\nimport Grid from 'react-bootstrap/lib/Grid';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport { imageBaseUrl } from './../../services/apiService';\nimport './../Details.css';\n\n/**\n * @name MovieDetailView\n * @description this is dumb component used to show the Movie's data using Grid of Bootstrap.\n * @param {*} movieData : Contains all the details of the movie required to show on the page. \n */\n\nconst renderMultipleAnswers = (data = []) => {\n    return data.map((item, i) => {\n        return item.name + (i === data.length - 1 ? '.' : ', ');\n    });\n}\n\nconst convertInMillions = (amount = 0) => (parseInt(amount, 10) / 1000000).toFixed(2) + ' millions.';\n\nconst MovieDetailView = ({ movieData }) => {\n    return (\n        <Grid>\n            <Row>\n                <Col xs={12} md={3}>\n                    <img width={240} height={364} src={`${imageBaseUrl}w500/${movieData.poster_path}`} alt=\"thumbnail\" />\n                </Col>\n                <Col xs={12} md={9}>\n                    <h2>{movieData.title}</h2>\n                    <h6>{movieData.tagline}</h6>\n                    <Row>\n                        <Col xs={6} md={2}>\n                            <span className=\"sub-key\">Minutes:</span> {movieData.runtime}\n                        </Col>\n                        <Col xs={6} md={2}>\n                            <span className=\"sub-key\">Status:</span> {movieData.status}\n                        </Col>\n                        <Col xs={6} md={3}>\n                            <span className=\"sub-key\">Release Date:</span> {movieData.release_date}\n                        </Col>\n                        <Col xs={6} md={4}>\n                            <span className=\"sub-key\">genres:</span> {renderMultipleAnswers(movieData.genres)}\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col xs={12} md={7}>\n                            <span className=\"key\">Ratings:</span>\n                            <span className=\"value\">{movieData.vote_average}</span> / 10\n                                    <span style={{ fontSize: '10px' }}>({movieData.vote_count})</span>\n                        </Col>\n                    </Row>\n                    {movieData.budget ? (<Row>\n                        <Col xs={12} md={7}>\n                            <span className=\"key\">Budget:</span>\n                            <span className=\"value\">${convertInMillions(movieData.budget)}</span>\n                        </Col>\n                    </Row>) : null}\n                    {movieData.revenue ? (<Row>\n                        <Col xs={12} md={7}>\n                            <span className=\"key\">Box Office:</span>\n                            <span className=\"value\">${convertInMillions(movieData.revenue)}</span>\n                        </Col>\n                    </Row>) : null}\n                    <Row>\n                        <Col xs={12} md={7}>\n                            <span className=\"key\">Language:</span>\n                            <span className=\"value\">\n                                {renderMultipleAnswers(movieData.spoken_languages)}\n                            </span>\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col xs={12} md={12}>\n                            <span className=\"key\">Plot:</span>\n                            <p className=\"value\">{movieData.overview}</p>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Grid>\n    );\n}\n\nexport default MovieDetailView;","import React from 'react';\nimport Table from 'react-bootstrap/lib/Table';\nimport { imageBaseUrl } from '../../services/apiService';\n\n/**\n * @name MovieCastView\n * @description this component shows list of cast and crew in tabular form.\n * @param {*} cast it contains list of the cast members of the movie.\n * @param {function} onClick click event to show the clicked person's details.\n */\n\nconst renderCast = (cast, onClick) => {\n    return cast.map(v => (\n        <tr onClick={() => onClick(v.id)} key={v.id}>\n            <td>{v.profile_path ? <img width=\"50\" height=\"75\" src={`${imageBaseUrl}w185${v.profile_path}`} alt=\"thumbnail\" /> : '-NA-'}</td>\n            <td>{v.name}</td>\n            <td>{v.character}</td>\n        </tr>\n    ));\n}\n\nconst MovieCastView = ({ cast, onClick }) => (\n    <Table striped bordered condensed hover>\n        <thead>\n            <tr>\n                <th>Image</th>\n                <th>Name</th>\n                <th>Character</th>\n            </tr>\n        </thead>\n        <tbody>{renderCast(cast, onClick)}</tbody>\n    </Table>\n);\n\nexport default MovieCastView;","import React from 'react';\nimport Grid from 'react-bootstrap/lib/Grid';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport { imageBaseUrl } from '../../services/apiService';\n\n/**\n * @name SimilarMovies\n * @description this dumb component shows similar movies to the selected movie.\n * @param {*} list it has list of similar movies come as a prop.\n * @param {function} onClick click event to show details of clicked Movie.\n */\n\nconst renderMovies = (list, onClick) => {\n    return list.map(movie => (\n        <Col key={movie.id}\n            xs={4} md={1}\n            style={{ height: '130px' }}\n            onClick={() => onClick(movie.id)}>\n                <img width=\"50\" height=\"75\" src={`${imageBaseUrl}w185${movie.poster_path}`}\n                    alt={movie.title} />\n                <div style={{height: '50px', fontSize: '12px', overflow: 'hidden'}}>{movie.title}</div>\n        </Col>\n    ));\n}\n\nconst SimilarMovies = ({ list, onClick }) => (\n    <Grid>\n        <Row>{renderMovies(list, onClick)}</Row>\n    </Grid>\n);\n\nexport default SimilarMovies;","import React, { Component } from 'react';\nimport { getMovieDetails, getMovieCast, getSimilarMovies } from '../services/apiService';\nimport MovieDetailView from '../components/movie-details/MovieDetailView';\nimport MovieCastView from '../components/movie-details/MovieCastView';\nimport SimilarMovies from '../components/movie-details/SimilarMovies';\n\n/**\n * @class MovieDetails\n * @description MovieDetails is a Container which show detail of the movie from API\n * called in componentDidMount and changing state so details get render.\n * It also call APIs for similar movies and its cast n crew.\n * State of this Container is Movie Data, cast of movie and similar movies. \n */\n\nclass MovieDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movieData: {},\n            movieCast: [],\n            similarMovies: []\n        };\n    }\n\n    componentDidMount() {\n        this.callApis(this.props.match.params.id)\n        window.scrollTo(0, 0);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.callApis(nextProps.match.params.id);\n        }\n    }\n\n    callApis = id => {\n        this.setState({ loading: true });\n        getMovieDetails(id)\n            .then(response => {\n                this.setState({\n                    loading: false,\n                    movieData: response\n                });\n            });\n\n        getMovieCast(id)\n            .then(response => {\n                this.setState({\n                    movieCast: response.cast\n                });\n            });\n\n        getSimilarMovies(id)\n            .then(response => {\n                this.setState({\n                    similarMovies: response.results.slice(0, 10)\n                });\n            });\n    }\n\n    goToCast = id => this.props.history.push(`/cast/${id}`);\n\n    goToMovie = id => this.props.history.push(`/movie/${id}`);\n\n    render() {\n        const { movieData, movieCast, similarMovies } = this.state;\n\n        const container = (\n            <div key={movieData.id}>\n                {\n                    this.state.loading ? <h2> Loading... </h2> :\n                        (\n                            <React.Fragment>\n                                <MovieDetailView movieData={movieData} />\n                                <br />\n                                <h4>Similar Movies</h4>\n                                <SimilarMovies onClick={this.goToMovie} list={similarMovies} />\n                                <br />\n                                <h4>Cast and Crew</h4>\n                                <MovieCastView onClick={this.goToCast} cast={movieCast} />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n        \n        return container;\n    }\n}\n\nexport default MovieDetails;","import React from 'react';\nimport Grid from 'react-bootstrap/lib/Grid';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport { imageBaseUrl } from './../../services/apiService';\nimport './../Details.css';\n\n/**\n * @name CastDetailView\n * @description this is dumb component used to show the Person's data using Grid of Bootstrap.\n * @param {*} cast : Contains all the details of the person required to show on the page. \n */\n\nconst CastDetailView = ({ cast }) => {\n    return (\n        <Grid>\n            <Row>\n                <Col xs={12} md={3}>\n                    <img width={240} height={364} src={`${imageBaseUrl}w500/${cast.profile_path}`} alt=\"thumbnail\" />\n                </Col>\n                <Col xs={12} md={9}>\n                    <h2>{cast.name}</h2>\n                    {cast.also_known_as.length ? <h6>{cast.also_known_as[0]}</h6> : null}\n                    <Row>\n                        <Col xs={6} md={12}>\n                            <span className=\"key\">Profession:</span>\n                            <span className=\"value\"> {cast.known_for_department}</span>\n                        </Col>\n                        <Col xs={6} md={4}>\n                            <span className=\"key\">Birthday:</span>\n                            <span className=\"value\">{cast.birthday}</span>\n                        </Col>\n                        <Col xs={6} md={8}>\n                            <span className=\"key\">Born at:</span>\n                            <span className=\"value\">{cast.place_of_birth}</span>\n                        </Col>\n                        {cast.deathday ? (<Col xs={6} md={6}>\n                            <span className=\"key\">Death:</span>\n                            <span className=\"value\">{cast.deathday}</span>\n                        </Col>) : null}\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col xs={12} md={12}>\n                            <span className=\"key\">Biography:</span>\n                            <p className=\"value\">{cast.biography}</p>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Grid>\n    );\n}\n\nexport default CastDetailView;","import React from 'react';\nimport Table from 'react-bootstrap/lib/Table';\nimport { imageBaseUrl } from '../../services/apiService';\n\n/**\n * @name MoviesOfCast\n * @description this component shows list of movies in which the person has worked.\n * @param {*} movieList it contains list of the movies of the person.\n * @param {function} onClick click event to show the clicked movie's details.\n */\n\nconst renderMovies = (movies, onClick) => {\n    return movies.map(v => (\n        <tr onClick={() => onClick(v.id)} key={v.id}>\n            <td>{v.poster_path ? <img width=\"50\" height=\"75\" src={`${imageBaseUrl}w185${v.poster_path}`} alt=\"thumbnail\" /> : '-NA-'}</td>\n            <td>{v.title}</td>\n            <td>{v.character}</td>\n            <td>{v.release_date}</td>\n        </tr>\n    ));\n}\n\nconst MoviesOfCast = ({ movieList, onClick }) => (\n    <Table striped bordered condensed hover>\n        <thead>\n            <tr>\n                <th>Image</th>\n                <th>Movie</th>\n                <th>As Character</th>\n                <th>Release Date</th>\n            </tr>\n        </thead>\n        <tbody>{renderMovies(movieList, onClick)}</tbody>\n    </Table>\n);\n\nexport default MoviesOfCast;","import React, { Component } from 'react';\nimport { getCastDetails, getCastMovies } from './../services/apiService';\nimport CastDetailView from './../components/cast-details/CastDetailView';\nimport MoviesOfCast from '../components/cast-details/MoviesOfCast';\n\n/**\n * @class CastDetails\n * @description CastDetails is a Container which show detail of the cast from API\n * called in componentDidMount and changing state so details get render.\n * It also call API for other movies of the person.\n * State of this Container is Person's Data, movie list of his/her. \n */\n\nclass CastDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            movieList: [],\n            castData: {}\n        };\n    }\n\n    componentDidMount() {\n        getCastDetails(this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    loading: false,\n                    castData: response\n                });\n            });\n        getCastMovies(this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    movieList: response.cast\n                });\n            });\n            \n        window.scrollTo(0, 0);\n    }\n\n    goToMovie = id => this.props.history.push(`/movie/${id}`);\n\n    render() {\n        const { castData, movieList } = this.state;        \n\n        const container = (\n            <div>\n                {\n                    this.state.loading ? <h2> Loading... </h2> :\n                        (\n                            <React.Fragment>\n                                <CastDetailView cast={castData} />\n                                <br />\n                                <h4>In Movies</h4>\n                                <MoviesOfCast onClick={this.goToMovie} movieList={movieList} />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n        \n        return container;\n    }\n}\n\nexport default CastDetails;","import React from 'react';\n\n/**\n * @name Footer\n * @description It is footer of the whole App\n * it contains link to this app's github page and my emailId\n */\n\nconst footerStyle = {\n    backgroundColor: '#282c34',\n    minHeight: '10vh',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white',\n    padding: '15px 80px',\n    textAlign: 'center'\n}\n\nconst ulStyle = {\n    width: '100%'\n}\n\nconst liStyle = {\n    listStyleType: 'none',\n    display: 'inline',\n    margin: '10px 40px'\n}\n\nconst Footer = (props) => (\n    <div style={footerStyle}>\n            <ul style={ulStyle}>\n                <li style={liStyle}>\n                    <a className=\"github-button\" href=\"https://github.com/dmosyash/movies-n-chill\" data-icon=\"octicon-star\" data-size=\"large\" aria-label=\"Star dmosyash/movies-n-chill on GitHub\">Star</a>\n                </li>\n                <li style={liStyle}>\n                    <a className=\"github-button\" href=\"https://github.com/dmosyash\" data-size=\"large\" aria-label=\"Follow @dmosyash on GitHub\">Follow @dmosyash</a>\n                </li>\n            </ul>\n        <h4>yash.kochar@hotmail.com</h4>\n    </div>\n);\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Home from './containers/Home';\nimport MovieDetails from './containers/MovieDetails';\nimport CastDetails from './containers/CastDetails';\nimport Footer from './components/Footer';\n\n/**\n * @name App\n * @description The main component of the app.\n * It contains three parts Header, Route part and Footer\n */\n\nclass App extends Component {\n  \n  goToMovie = id => this.props.history.push(`/movie/${id}`);\n\n  goHome = () => this.props.history.push('/');\n  \n  render() {\n      const styleContainer = {\n        padding: '50px 80px',\n        backgroundColor: '#dfdfdf',\n        minHeight: '80vh'\n      }\n    \n    return (\n      <div>\n        <Header goToMovie={this.goToMovie} goHome={this.goHome} />\n        <div style={styleContainer}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/page/:pageNo\" component={Home} />\n            <Route path=\"/movie/:id\" component={MovieDetails} />\n            <Route path=\"/cast/:id\" component={CastDetails} />\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n"],"sourceRoot":""}